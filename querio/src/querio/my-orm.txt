Требования к ORM:

* Entity класс не должен быть автосгенерирован. Хочется самому прописывать имена полей и добавлять методы.
  Также, все поля entity класса должны быть простыми переменными var/val.
  Поэтому, не подходят: jooq, querydsl, circumflex orm

* Поддержка нескольких БД в одном запросе (ros, ros_bill, и т.д.)
  Не подходит querydsl

* Динамическое конструирование запроса с проверкой на этапе компиляции, т.е. typesafe (например, для этого класса DialogVacListBranch).
  Не подходят: mybatis, o/r broker, anorm, querulous, hibernate

* Entity класс содержит много полей (от 40 и выше)
  Не подходит slick (не знаю как в нём это можно сделать)

* Поддержка Option

* Поддержка Enumerable (точнее, его специальный аналог для mysql enum), mysql set, и прочие кастомные типы
  Не подходят: squeryl

* Дополнительные функции БД, например SELECT CALC_FOUND_ROWS, DISTINCT, CONCAT, ORDER BY RAND() и т.д.
  Тут с этим вообще проблема. Не просто найти orm с поддержкой CALC_FOUND_ROWS, например.

* Поддержка LEFT JOIN (а не просто JOIN).

* Вменяемая производительность
  Не подходят: hibernate, circumflex orm, mapperdao, slick

* Частичная загрузка entity объектов. Т.е., когда в entity >50 полей, а нам нужно загрузить 10.
  Именно поэтому появились классы ObjResFull, ObjResShort, ObjRes и подобные.
  Может быть, это не требование к orm, но задача такая есть.
